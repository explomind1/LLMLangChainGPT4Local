# -*- coding: utf-8 -*-
"""Copy of auto-dataset-finetune.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gXvLQCa0qBWbIPbM-oNgaojUHDcc-78c
"""

import os

# Replace 'YOUR_OPENAI_API_KEY' with your actual OpenAI API key
api_key = '##############'

# Set the environment variable
os.environ['OPENAI_API_KEY'] = api_key

import os
import pickle

# Set the path to the directory
dir_path = '10K/'

# Create a dictionary to store the pickle objects
pickle_dict = {}

# Walk through the files in the directory
for filename in os.listdir(dir_path):
    # Ensure we're working with a pickle file
    if filename.endswith('.pkl'):
        with open(os.path.join(dir_path, filename), 'rb') as f:
            # Load the pickle file and store it in the dictionary
            pickle_obj = pickle.load(f)
            pickle_dict[filename] = pickle_obj

# Now, pickle_dict holds all of your loaded pickle objects
# Key is the filename and value is the pickle object

pickle_dict.keys()


# print(pickle_dict['1.pkl'].head())

# print(pickle_dict['1.pkl'].iloc[0]['section1A'])

# from google.colab import drive
# drive.mount('/content/drive')



from langchain.text_splitter import RecursiveCharacterTextSplitter

text_splitter = RecursiveCharacterTextSplitter(
    # Set a really small chunk size, just to show.
    chunk_size = 2000,
    chunk_overlap  = 300,
    length_function = len,
    add_start_index = True,
)

# texts = text_splitter.create_documents([pickle_dict['1A.pkl'].iloc[0]['section1A']])
texts = text_splitter.create_documents([pickle_dict['8.pkl'].iloc[0]['section8']])

#texts = text_splitter.create_documents([pickle_dict['14.pkl'].iloc[0]['section14']])

# print(texts)
#print(texts[0])
# print(texts[1])

# len(texts)

from langchain.prompts import PromptTemplate
from langchain.chat_models import ChatOpenAI
from langchain.chains import LLMChain

p = """
As a capable financial analyst, your task is to review a section from Apple Inc.'s latest SEC filing.
This section contains information about the company's financial position, its recent performance, and future plans.
Please create a list of questions that could be answered by the content of the filing, along with their respective answers.
These questions should focus on key points such as financial health, risk factors, executive compensation, business operations, and forward-looking statements.
Provide concise, clear answers for each question based on the information presented in the filing.

{filing_content}
"""

def generate_qa_pairs_from_filing(filing_content):

  llm = ChatOpenAI(temperature=0.1, model_name='gpt-4')
  prompt = PromptTemplate(
      input_variables=["filing_content"],
      template = p
  )
  chain = LLMChain(llm=llm, prompt=prompt)
  print(chain.run(filing_content))

generate_qa_pairs_from_filing(texts[0].page_content)

